;(setf a (make-estado :pontos 100 :pecas-por-colocar '('i 'j 'l) :pecas-colocadas 5 :tabuleiro (cria-tabuleiro)))
;(first (estado-pecas-por-colocar a))
(defun preenche-tudo (tab)
  (dotimes (i 18 tab)
    (dotimes (j 10)
        (tabuleiro-preenche! tab i j)
    )
  )
)
(setf tab_9_esq (preenche-tudo (cria-tabuleiro)))
(defun preenche-diagonal (tab)
  (dotimes (i 18 tab)
    (dotimes (j 10)
      (cond ((> j i)
        (tabuleiro-preenche! tab i j)
        )
      )
    )
  )
)
(setf tab_testes  (preenche-diagonal(cria-tabuleiro)))
(setf estado-inicial (make-estado :pontos 0 :pecas-por-colocar '(z z z z z z z z z z z z z z z z z z z z z z z z z z z z z z z z i j i ) :pecas-colocadas '() :tabuleiro tab_testes ))

;|# Accoes #|
(setf accao1 (cria-accao 1 peca-z1))
(setf accao2 (cria-accao 1 peca-z1))
(setf accao3 (cria-accao 1 peca-z1))
(setf accao4 (cria-accao 1 peca-z1))
(setf accao12 (cria-accao 1 peca-z1))
(setf accao5 (cria-accao 3 peca-z1))
(setf accao6 (cria-accao 3 peca-z1))
(setf accao7 (cria-accao 3 peca-z1))
(setf accao8 (cria-accao 3 peca-z1))
(setf accao9 (cria-accao 5 peca-z1))
(setf accao10 (cria-accao 5 peca-z1))
(setf accao11 (cria-accao 5 peca-z1))
(setf accao13 (cria-accao 7 peca-z1))
(setf accao14 (cria-accao 7 peca-z1))
(setf accao15 (cria-accao 9 peca-i0))
(setf accao16 (cria-accao 0 peca-i0))
(setf accao17 (cria-accao 0 peca-i0))
(setf accao18 (cria-accao 0 peca-i0))
(setf accao19 (cria-accao 1 peca-z1))
(setf accao20 (cria-accao 3 peca-z1))
(setf accao21 (cria-accao 5 peca-z1))
(setf accao22 (cria-accao 7 peca-z1))
(setf accao23 (cria-accao 9 peca-i0))
(setf accao24 (cria-accao 7 peca-z1))
(setf accao25 (cria-accao 7 peca-z1))
(setf accao26 (cria-accao 5 peca-z1))
(setf accao27 (cria-accao 3 peca-z1))
(setf accao28 (cria-accao 1 peca-z1))
(setf accao29 (cria-accao 0 peca-i0))

;;(setf accao9 (cria-accao 4 peca-l0))
;;(setf accao4 (cria-accao 5 peca-o0))
;;(setf accao5 (cria-accao 0 peca-o0))
;;(setf accao6 (cria-accao 2 peca-o0))
;;(setf accao7 (cria-accao 8 peca-z1))
;;(setf accao8 (cria-accao 8 peca-z1))
;;(setf accao9 (cria-accao 3 peca-i1))
;;(setf accao10 (cria-accao 0 peca-j1))
;;(setf accao11 (cria-accao 7 peca-i0))
(setf lista-accoes (list accao1 accao2 accao3 accao4 accao5 accao6 accao7 accao8 accao9 accao10 accao11 accao12 accao13 accao14 accao15 accao16 accao17 accao18 accao19 accao20 accao21 accao22 accao23 accao24 accao25 accao26 accao27 accao28 accao29))


(setf estad (make-estado :pontos 0 :pecas-por-colocar '(i j l s z t o  z z z z z z z z z z z z i j i ) :pecas-colocadas (list) :tabuleiro tab_testes ))

(setf estad2 (resultado estad accao1))
(setf estad3 (resultado estad2 accao2))
(setf estad4 (resultado estad3 accao3))
(setf estad5 (resultado estad4 accao4))
(setf estad6 (resultado estad5 accao5))
(setf estad7 (resultado estad6 accao6))
(setf estad8 (resultado estad7 accao7))
(setf estad9 (resultado estad8 accao8))
(setf estad10 (resultado estad9 accao9))
(setf estad11 (resultado estad10 accao10))
(desenha-estado (resultado estad10 accao10))
(print 'opurtonidade)
(print (custo-opurtonidade estad11))
;(desenha-estado (resultado estad11 accao11))
;(desenha-estado (resultado estad7 accao7))
(setf tab_8_esq (preenche-diagonal (cria-tabuleiro)))
tab_8_esq

;;;;;;;;;;;;;;;;;;;;;;;; Testar Resultado ,;;;;;;;;;;;;;;;;;;;;;;;;;;
;;(executa-jogadas estado-inicial lista-accoes)
;;;;;;;;;;;;;;;;;;;;;;;; Testar Resultado ,;;;;;;;;;;;;;;;;;;;;;;;;;;




(setf tab1 (cria-tabuleiro))

;; Coluna 1 Preenchida
(tabuleiro-preenche! tab1 0 0)
(tabuleiro-preenche! tab1 1 0)
(tabuleiro-preenche! tab1 2 0)
(tabuleiro-preenche! tab1 3 0)
(tabuleiro-preenche! tab1 4 0)
(tabuleiro-preenche! tab1 5 0)
(tabuleiro-preenche! tab1 6 0)
(tabuleiro-preenche! tab1 7 0)
(tabuleiro-preenche! tab1 8 0)
(tabuleiro-preenche! tab1 9 0)
(tabuleiro-preenche! tab1 10 0)
(tabuleiro-preenche! tab1 11 0)
(tabuleiro-preenche! tab1 12 0)
(tabuleiro-preenche! tab1 13 0)
(tabuleiro-preenche! tab1 14 0)
(tabuleiro-preenche! tab1 15 0)
(tabuleiro-preenche! tab1 16 0)
(tabuleiro-preenche! tab1 17 0)
(tabuleiro-preenche! tab1 17 1)
(tabuleiro-preenche! tab1 17 2)
(tabuleiro-preenche! tab1 17 3)
(tabuleiro-preenche! tab1 17 4)

(tabuleiro-preenche! tab1 0 1)
(tabuleiro-preenche! tab1 0 2)
(tabuleiro-preenche! tab1 0 3)
(tabuleiro-preenche! tab1 0 4)
(tabuleiro-preenche! tab1 0 5)
(tabuleiro-preenche! tab1 0 6)
(tabuleiro-preenche! tab1 0 7)
(tabuleiro-preenche! tab1 0 8)




(tabuleiro-preenche! tab1 1 1)
(tabuleiro-preenche! tab1 2 1)
(tabuleiro-preenche! tab1 3 1)
(tabuleiro-preenche! tab1 3 2)

(tabuleiro-preenche! tab1 1 2)
(tabuleiro-preenche! tab1 1 3)
(tabuleiro-preenche! tab1 2 2)
(tabuleiro-preenche! tab1 4 1)
(tabuleiro-preenche! tab1 4 2)
tab1

(tabuleiro-altura-coluna tab1 0)
(tabuleiro-altura-coluna tab1 1)
(tabuleiro-altura-coluna tab1 2)
(tabuleiro-altura-coluna tab1 9)
;(setf array (array-slice tab_8_esq 0))
(tabuleiro-linha-completa-p tab1 0)
(tabuleiro-topo-preenchido-p tab1)
;tabuleiros-iguais tab1 tab1)
(setf tab2 (copia-tabuleiro tab1))
